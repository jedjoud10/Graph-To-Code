
float _1;
float _2;
float4x4 _3;
float _9;
RWTexture3D<float> voxels;
int size;
int3 permuationSeed;
int3 moduloSeed;
float3 scale;
float3 offset;
#include "Assets/Compute/Noises.cginc"
#include "Assets/Compute/Other.cginc"
// defined nodes: 10, depth: 0, total lines: 6 
float Voxel(float3 position, uint3 id) {
	float3 _4 = mul(_3, float4(position, 1.0));
	float2 _5 = _4.xz;
	float _6 = (snoise((_5) * _2)) * _1;
	float _7 = _4.y;
	float _8 = _6 + _7;
	float _10 = _8 * _9;
	return _10;
}


#pragma kernel CSVoxel
[numthreads(8, 8, 8)]
void CSVoxel(uint3 id : SV_DispatchThreadID) {
    voxels[id] = Voxel((float3(id) + offset) * scale, id);
}