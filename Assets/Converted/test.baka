
#pragma kernel CSVoxel
// properties
float inj_float_0;
float inj_float_1;
float inj_float_2;
float inj_float_3;
float inj_float_4;
float inj_float_5;
float inj_float_6;
float inj_float_7;
float inj_float_8;
RWTexture3D<float> voxels;
int3 permuationSeed;
int3 moduloSeed;
#include "Assets/Noises.cginc"
void Func(float3 position, out float density, out uint material) {
// lines
	const float st__0 = 1;
	const float st__1 = 1;
	const float st__2 = 1;
	const float st__3 = 1;
	const float st__4 = 1;
	const float st__5 = 1;
	float2 position_swizzled_0 = position.xz;
	const float3 st__6 = float3(1,1,1);
	float2 position_swizzled_0_x_offset_0 = (position_swizzled_0 + float2(123.8544, 32.22354));
	float2 position_swizzled_0_y_offset_0 = (position_swizzled_0 + float2(65.4238, -551.1535));
	float position_swizzled_0_x_offset_0_noised_0 = (snoise((position_swizzled_0_x_offset_0) * inj_float_2)) * inj_float_3;
	float position_swizzled_0_warped_x_0 = (position_swizzled_0.x + position_swizzled_0_x_offset_0_noised_0 * st__6.x);
	float position_swizzled_0_y_offset_0_noised_0 = (snoise((position_swizzled_0_y_offset_0) * inj_float_2)) * inj_float_3;
	float position_swizzled_0_warped_y_0 = (position_swizzled_0.y + position_swizzled_0_y_offset_0_noised_0 * st__6.y);
	float2 position_swizzled_0_warped_0 = float2(position_swizzled_0_warped_x_0, position_swizzled_0_warped_y_0);
	const float st__7 = 0.5;
	const float st__8 = 0.5;
	const float st__9 = 1;
	const float st__10 = 1;
	float position_y_0 = position.y;
	const float st__11 = 10;
	float position_y_0_s_st__11_0 = position_y_0 - st__11;
	float position_swizzled_0_warped_0_noised_fbm_0 = 0.0;
	float position_swizzled_0_warped_0_noised_fbm_scale_0 = 1.0;
	float position_swizzled_0_warped_0_noised_fbm_amplitude_0 = 1.0;
	[unroll]
	for(uint i = 0; i < 3; i++) {
		position_swizzled_0_warped_0_noised_fbm_0 += abs((snoise((position_swizzled_0_warped_0 * position_swizzled_0_warped_0_noised_fbm_scale_0 + hash31(float(i))) * inj_float_0)) * inj_float_1) * position_swizzled_0_warped_0_noised_fbm_amplitude_0;
		position_swizzled_0_warped_0_noised_fbm_scale_0 *= inj_float_4;
		position_swizzled_0_warped_0_noised_fbm_amplitude_0 *= inj_float_5;
	}
	float position_swizzled_0_warped_0_noised_0 = position_swizzled_0_warped_0_noised_fbm_0;
	float position_y_0_s_st__11_0_p_position_swizzled_0_warped_0_noised_0_0 = position_y_0_s_st__11_0 + position_swizzled_0_warped_0_noised_0;
	float position_y_0_s_st__11_0_p_position_swizzled_0_warped_0_noised_0_0_p_inj_float_6_0 = position_y_0_s_st__11_0_p_position_swizzled_0_warped_0_noised_0_0 + inj_float_6;
	float position_swizzled_0_noised_0 = (voronoise((position_swizzled_0) * inj_float_7, st__8, st__7)) * inj_float_8;
	float position_y_0_s_st__11_0_p_position_swizzled_0_warped_0_noised_0_0_p_inj_float_6_0_p_position_swizzled_0_noised_0_0 = position_y_0_s_st__11_0_p_position_swizzled_0_warped_0_noised_0_0_p_inj_float_6_0 + position_swizzled_0_noised_0;
	const uint st__12 = 0;
	density = position_y_0_s_st__11_0_p_position_swizzled_0_warped_0_noised_0_0_p_inj_float_6_0_p_position_swizzled_0_noised_0_0;
	material = st__12;
}

int3 offset;
[numthreads(8, 8, 8)]
void CSVoxel(uint3 id : SV_DispatchThreadID) {
    float3 position = float3(id + offset * 32);
    float density = 0.0;
    uint material = 0;
    Func(position * 0.01, density, material);
    voxels[id + offset * 32] = density;
}
        